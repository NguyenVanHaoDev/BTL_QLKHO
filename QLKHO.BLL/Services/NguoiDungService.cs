using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using QLKHO.DAL;
using QLKHO.DAL.Models;
using QLKHO.DAL.Repositories;

namespace QLKHO.BLL.Services
{
    public class NguoiDungService : IDisposable
    {
        private UnitOfWork _unitOfWork;
        private LichSuService _lichSuService;
        private bool _disposed = false;

        public NguoiDungService()
        {
            _unitOfWork = new UnitOfWork();
            _lichSuService = new LichSuService();
        }

        /// <summary>
        /// L·∫•y danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng
        /// </summary>
        public List<NguoiDung> LayDanhSachNguoiDung()
        {
            return _unitOfWork.NguoiDungRepository.GetAll()
                .OrderBy(nd => nd.HoTen)
                .ToList();
        }

        /// <summary>
        /// L·∫•y danh s√°ch ng∆∞·ªùi d√πng ho·∫°t ƒë·ªông (TrangThai = true)
        /// </summary>
        public List<NguoiDung> LayDanhSachNguoiDungHoatDong()
        {
            return _unitOfWork.NguoiDungRepository.GetAll()
                .Where(nd => nd.TrangThai == true)
                .OrderBy(nd => nd.HoTen)
                .ToList();
        }

        /// <summary>
        /// L·∫•y ng∆∞·ªùi d√πng theo ID
        /// </summary>
        public NguoiDung LayNguoiDungTheoId(int maND)
        {
            return _unitOfWork.NguoiDungRepository.GetById(maND);
        }

        /// <summary>
        /// L·∫•y ng∆∞·ªùi d√πng theo t√™n ƒëƒÉng nh·∫≠p
        /// </summary>
        public NguoiDung LayNguoiDungTheoTenDangNhap(string tenDangNhap)
        {
            return _unitOfWork.NguoiDungRepository.GetAll()
                .FirstOrDefault(nd => nd.TenDangNhap == tenDangNhap);
        }

        /// <summary>
        /// Th√™m ng∆∞·ªùi d√πng m·ªõi
        /// </summary>
        public ServiceResult ThemNguoiDung(NguoiDung nguoiDung)
        {
            try
            {
                // Ki·ªÉm tra connection tr∆∞·ªõc khi th·ª±c hi·ªán
                if (!_unitOfWork.IsContextValid())
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu kh√¥ng ·ªïn ƒë·ªãnh. Vui l√≤ng th·ª≠ l·∫°i."
                    };
                }

                // Validation
                var validationResult = ValidateNguoiDung(nguoiDung, false); // false = th√™m m·ªõi
                if (!validationResult.ThanhCong)
                {
                    return validationResult;
                }

                // Ki·ªÉm tra t√™n ƒëƒÉng nh·∫≠p ƒë√£ t·ªìn t·∫°i ch∆∞a
                if (KiemTraTenDangNhapTonTai(nguoiDung.TenDangNhap))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "T√™n ƒëƒÉng nh·∫≠p ƒë√£ t·ªìn t·∫°i"
                    };
                }

                // Ki·ªÉm tra email ƒë√£ t·ªìn t·∫°i ch∆∞a (n·∫øu c√≥)
                if (!string.IsNullOrEmpty(nguoiDung.Email) && KiemTraEmailTonTai(nguoiDung.Email))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng"
                    };
                }

                // Set th√¥ng tin m·∫∑c ƒë·ªãnh
                nguoiDung.NgayTao = DateTime.Now;
                nguoiDung.NgayCapNhat = DateTime.Now;
                nguoiDung.TrangThai = true;
                nguoiDung.SoLanDangNhapSai = 0;
                nguoiDung.KhoaTaiKhoan = false;

                _unitOfWork.NguoiDungRepository.Add(nguoiDung);
                _unitOfWork.SaveChanges();

                // Ghi l·ªãch s·ª≠ thay ƒë·ªïi
                try
                {
                    var duLieuMoi = SerializeNguoiDung(nguoiDung);
                    
                    _lichSuService.GhiLichSuThayDoi("NguoiDung", nguoiDung.MaND, "INSERT", 
                        null, duLieuMoi, nguoiDung.MaND, GetCurrentIPAddress());
                }
                catch
                {
                    // B·ªè qua l·ªói ghi l·ªãch s·ª≠ ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn thao t√°c ch√≠nh
                }

                return new ServiceResult
                {
                    ThanhCong = true,
                    ThongBao = "Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng"
                };
            }
            catch (Exception ex)
            {
                // Debug: Log to√†n b·ªô exception details
                var fullErrorDetails = GetFullExceptionDetails(ex);
                
                // X·ª≠ l√Ω c√°c lo·∫°i l·ªói c·ª• th·ªÉ - ki·ªÉm tra c·∫£ InnerException Level 2
                var errorMessage = ex.Message;
                if (ex.InnerException != null)
                {
                    errorMessage += " " + ex.InnerException.Message;
                    if (ex.InnerException.InnerException != null)
                    {
                        errorMessage += " " + ex.InnerException.InnerException.Message;
                    }
                }
                
                if (ex.InnerException != null)
                {
                    var innerEx = ex.InnerException;
                    if (innerEx.Message.Contains("UNIQUE constraint") || innerEx.Message.Contains("duplicate key"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "‚ùå Th√¥ng tin ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ T√™n ƒëƒÉng nh·∫≠p ho·∫∑c email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng\n" +
                                      "‚Ä¢ M·ªói t√†i kho·∫£n ph·∫£i c√≥ th√¥ng tin duy nh·∫•t\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra v√† s·ª≠ d·ª•ng t√™n ƒëƒÉng nh·∫≠p/email kh√°c."
                        };
                    }
                    else if (innerEx.Message.Contains("CHECK constraint") || 
                             innerEx.Message.Contains("CK__NguoiDung__Email") ||
                             innerEx.Message.Contains("CK__NhaCungCap__Email") ||
                             innerEx.Message.Contains("CK__NguoiDung__DienThoai") ||
                             innerEx.Message.Contains("CK__NhaCungCap__DienThoai") ||
                             innerEx.Message.Contains("CK_TenDangNhap") ||
                             innerEx.Message.Contains("CK__NguoiDung__TenDangNhap") ||
                             innerEx.Message.Contains("CK_MatKhau") ||
                             innerEx.Message.Contains("CK__NguoiDung__MatKhau") ||
                             innerEx.Message.Contains("CK__NguoiDung__VaiTro") ||
                             innerEx.Message.Contains("CK_SoLanDangNhapSai") ||
                             innerEx.Message.Contains("CK__NguoiDung__SoLanDangNhapSai"))
                    {
                        // X·ª≠ l√Ω l·ªói CHECK constraint c·ª• th·ªÉ
                        return HandleCheckConstraintError(innerEx.Message);
                    }
                    else if (innerEx.Message.Contains("constraint"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ Th√¥ng tin nh·∫≠p v√†o kh√¥ng ƒë√∫ng quy t·∫Øc\n" +
                                      "‚Ä¢ Vi ph·∫°m r√†ng bu·ªôc d·ªØ li·ªáu\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin nh·∫≠p v√†o."
                        };
                    }
                    else if (innerEx.Message.Contains("timeout"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "‚è∞ K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu b·ªã timeout!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ Thao t√°c m·∫•t qu√° nhi·ªÅu th·ªùi gian\n" +
                                      "‚Ä¢ K·∫øt n·ªëi m·∫°ng c√≥ th·ªÉ kh√¥ng ·ªïn ƒë·ªãnh\n\n" +
                                      "üí° Vui l√≤ng th·ª≠ l·∫°i sau v√†i gi√¢y."
                        };
                    }
                    else if (innerEx.Message.Contains("connection"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "üîå L·ªói k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn database\n" +
                                      "‚Ä¢ K·∫øt n·ªëi m·∫°ng b·ªã gi√°n ƒëo·∫°n\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng v√† th·ª≠ l·∫°i."
                        };
                    }
                }
                
                // Ki·ªÉm tra to√†n b·ªô error message (bao g·ªìm c·∫£ InnerException Level 2)
                if (errorMessage.Contains("CHECK constraint") || 
                    errorMessage.Contains("CK__NguoiDung__Email") ||
                    errorMessage.Contains("CK__NhaCungCap__Email") ||
                    errorMessage.Contains("CK__NguoiDung__DienThoai") ||
                    errorMessage.Contains("CK__NhaCungCap__DienThoai") ||
                    errorMessage.Contains("CK_TenDangNhap") ||
                    errorMessage.Contains("CK__NguoiDung__TenDangNhap") ||
                    errorMessage.Contains("CK_MatKhau") ||
                    errorMessage.Contains("CK__NguoiDung__MatKhau") ||
                    errorMessage.Contains("CK__NguoiDung__VaiTro") ||
                    errorMessage.Contains("CK_SoLanDangNhapSai") ||
                    errorMessage.Contains("CK__NguoiDung__SoLanDangNhapSai"))
                {
                    return HandleCheckConstraintError(errorMessage);
                }

                // Tr·∫£ v·ªÅ th√¥ng tin l·ªói chi ti·∫øt cho debug
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = $"‚ùå L·ªói khi th√™m ng∆∞·ªùi d√πng!\n\n{fullErrorDetails}"
                };
            }
        }

        /// <summary>
        /// C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
        /// </summary>
        public ServiceResult CapNhatNguoiDung(NguoiDung nguoiDung)
        {
            try
            {
                // Ki·ªÉm tra connection tr∆∞·ªõc khi th·ª±c hi·ªán
                if (!_unitOfWork.IsContextValid())
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu kh√¥ng ·ªïn ƒë·ªãnh. Vui l√≤ng th·ª≠ l·∫°i."
                    };
                }

                // Validation
                var validationResult = ValidateNguoiDung(nguoiDung, true); // true = c·∫≠p nh·∫≠t
                if (!validationResult.ThanhCong)
                {
                    return validationResult;
                }

                // L·∫•y th√¥ng tin c≈©
                var nguoiDungCu = _unitOfWork.NguoiDungRepository.GetById(nguoiDung.MaND);
                if (nguoiDungCu == null)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng"
                    };
                }

                // Ki·ªÉm tra t√™n ƒëƒÉng nh·∫≠p ƒë√£ t·ªìn t·∫°i ch∆∞a (tr·ª´ ch√≠nh n√≥)
                if (KiemTraTenDangNhapTonTai(nguoiDung.TenDangNhap, nguoiDung.MaND))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "T√™n ƒëƒÉng nh·∫≠p ƒë√£ t·ªìn t·∫°i"
                    };
                }

                // Ki·ªÉm tra email ƒë√£ t·ªìn t·∫°i ch∆∞a (tr·ª´ ch√≠nh n√≥)
                if (!string.IsNullOrEmpty(nguoiDung.Email) && KiemTraEmailTonTai(nguoiDung.Email, nguoiDung.MaND))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng"
                    };
                }

                // Debug: Ki·ªÉm tra tr·∫°ng th√°i entity tr∆∞·ªõc khi update
                var entityState = _unitOfWork.Context.Entry(nguoiDungCu).State;
                
                // L∆∞u d·ªØ li·ªáu c≈© TR∆Ø·ªöC KHI c·∫≠p nh·∫≠t ƒë·ªÉ ghi l·ªãch s·ª≠
                var duLieuCu = SerializeNguoiDung(nguoiDungCu);
                
                // C·∫≠p nh·∫≠t th√¥ng tin - s·ª≠ d·ª•ng c√°ch ti·∫øp c·∫≠n ƒë∆°n gi·∫£n h∆°n
                nguoiDungCu.TenDangNhap = nguoiDung.TenDangNhap;
                // Ch·ªâ c·∫≠p nh·∫≠t m·∫≠t kh·∫©u n·∫øu c√≥ gi√° tr·ªã m·ªõi
                if (!string.IsNullOrEmpty(nguoiDung.MatKhau))
                {
                    nguoiDungCu.MatKhau = nguoiDung.MatKhau;
                }
                nguoiDungCu.HoTen = nguoiDung.HoTen;
                nguoiDungCu.Email = nguoiDung.Email;
                nguoiDungCu.DienThoai = nguoiDung.DienThoai;
                nguoiDungCu.VaiTro = nguoiDung.VaiTro;
                nguoiDungCu.TrangThai = nguoiDung.TrangThai;
                nguoiDungCu.NgayCapNhat = DateTime.Now;

                // S·ª≠ d·ª•ng Repository Update method thay v√¨ tr·ª±c ti·∫øp v·ªõi Context
                _unitOfWork.NguoiDungRepository.Update(nguoiDungCu);
                _unitOfWork.SaveChanges();

                // Ghi l·ªãch s·ª≠ thay ƒë·ªïi
                try
                {
                    var duLieuMoi = SerializeNguoiDung(nguoiDungCu);
                    
                    _lichSuService.GhiLichSuThayDoi("NguoiDung", nguoiDungCu.MaND, "UPDATE", 
                        duLieuCu, duLieuMoi, nguoiDungCu.MaND, GetCurrentIPAddress());
                }
                catch
                {
                    // B·ªè qua l·ªói ghi l·ªãch s·ª≠ ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn thao t√°c ch√≠nh
                }

                return new ServiceResult
                {
                    ThanhCong = true,
                    ThongBao = "C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng th√†nh c√¥ng"
                };
            }
            catch (Exception ex)
            {
                // Debug: Log to√†n b·ªô exception details
                var fullErrorDetails = GetFullExceptionDetails(ex);
                
                // X·ª≠ l√Ω c√°c lo·∫°i l·ªói c·ª• th·ªÉ - ki·ªÉm tra c·∫£ InnerException Level 2
                var errorMessage = ex.Message;
                if (ex.InnerException != null)
                {
                    errorMessage += " " + ex.InnerException.Message;
                    if (ex.InnerException.InnerException != null)
                    {
                        errorMessage += " " + ex.InnerException.InnerException.Message;
                    }
                }
                
                if (ex.InnerException != null)
                {
                    var innerEx = ex.InnerException;
                    if (innerEx.Message.Contains("UNIQUE constraint") || innerEx.Message.Contains("duplicate key"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "‚ùå Th√¥ng tin ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ T√™n ƒëƒÉng nh·∫≠p ho·∫∑c email ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng\n" +
                                      "‚Ä¢ M·ªói t√†i kho·∫£n ph·∫£i c√≥ th√¥ng tin duy nh·∫•t\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra v√† s·ª≠ d·ª•ng t√™n ƒëƒÉng nh·∫≠p/email kh√°c."
                        };
                    }
                    else if (innerEx.Message.Contains("CHECK constraint") || 
                             innerEx.Message.Contains("CK__NguoiDung__Email") ||
                             innerEx.Message.Contains("CK__NhaCungCap__Email") ||
                             innerEx.Message.Contains("CK__NguoiDung__DienThoai") ||
                             innerEx.Message.Contains("CK__NhaCungCap__DienThoai") ||
                             innerEx.Message.Contains("CK_TenDangNhap") ||
                             innerEx.Message.Contains("CK__NguoiDung__TenDangNhap") ||
                             innerEx.Message.Contains("CK_MatKhau") ||
                             innerEx.Message.Contains("CK__NguoiDung__MatKhau") ||
                             innerEx.Message.Contains("CK__NguoiDung__VaiTro") ||
                             innerEx.Message.Contains("CK_SoLanDangNhapSai") ||
                             innerEx.Message.Contains("CK__NguoiDung__SoLanDangNhapSai"))
                    {
                        // X·ª≠ l√Ω l·ªói CHECK constraint c·ª• th·ªÉ
                        return HandleCheckConstraintError(innerEx.Message);
                    }
                    else if (innerEx.Message.Contains("constraint"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ Th√¥ng tin nh·∫≠p v√†o kh√¥ng ƒë√∫ng quy t·∫Øc\n" +
                                      "‚Ä¢ Vi ph·∫°m r√†ng bu·ªôc d·ªØ li·ªáu\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin nh·∫≠p v√†o."
                        };
                    }
                    else if (innerEx.Message.Contains("foreign key") || innerEx.Message.Contains("reference"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "üîó Kh√¥ng th·ªÉ th·ª±c hi·ªán do r√†ng bu·ªôc d·ªØ li·ªáu!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ D·ªØ li·ªáu ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng ·ªü n∆°i kh√°c\n" +
                                      "‚Ä¢ Kh√¥ng th·ªÉ x√≥a/c·∫≠p nh·∫≠t do li√™n k·∫øt\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra v√† x·ª≠ l√Ω c√°c d·ªØ li·ªáu li√™n quan tr∆∞·ªõc."
                        };
                    }
                    else if (innerEx.Message.Contains("timeout"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "‚è∞ K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu b·ªã timeout!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ Thao t√°c m·∫•t qu√° nhi·ªÅu th·ªùi gian\n" +
                                      "‚Ä¢ K·∫øt n·ªëi m·∫°ng c√≥ th·ªÉ kh√¥ng ·ªïn ƒë·ªãnh\n\n" +
                                      "üí° Vui l√≤ng th·ª≠ l·∫°i sau v√†i gi√¢y."
                        };
                    }
                    else if (innerEx.Message.Contains("connection"))
                    {
                        return new ServiceResult
                        {
                            ThanhCong = false,
                            ThongBao = "üîå L·ªói k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu!\n\n" +
                                      "üìã V·∫•n ƒë·ªÅ:\n" +
                                      "‚Ä¢ Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn database\n" +
                                      "‚Ä¢ K·∫øt n·ªëi m·∫°ng b·ªã gi√°n ƒëo·∫°n\n\n" +
                                      "üí° Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng v√† th·ª≠ l·∫°i."
                        };
                    }
                }
                
                // Ki·ªÉm tra to√†n b·ªô error message (bao g·ªìm c·∫£ InnerException Level 2)
                if (errorMessage.Contains("CHECK constraint") || 
                    errorMessage.Contains("CK__NguoiDung__Email") ||
                    errorMessage.Contains("CK__NhaCungCap__Email") ||
                    errorMessage.Contains("CK__NguoiDung__DienThoai") ||
                    errorMessage.Contains("CK__NhaCungCap__DienThoai") ||
                    errorMessage.Contains("CK_TenDangNhap") ||
                    errorMessage.Contains("CK__NguoiDung__TenDangNhap") ||
                    errorMessage.Contains("CK_MatKhau") ||
                    errorMessage.Contains("CK__NguoiDung__MatKhau") ||
                    errorMessage.Contains("CK__NguoiDung__VaiTro") ||
                    errorMessage.Contains("CK_SoLanDangNhapSai") ||
                    errorMessage.Contains("CK__NguoiDung__SoLanDangNhapSai"))
                {
                    return HandleCheckConstraintError(errorMessage);
                }

                // Tr·∫£ v·ªÅ th√¥ng tin l·ªói chi ti·∫øt cho debug
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = $"‚ùå L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng!\n\n{fullErrorDetails}"
                };
            }
        }

        /// <summary>
        /// X√≥a ng∆∞·ªùi d√πng (soft delete)
        /// </summary>
        public ServiceResult XoaNguoiDung(int maND)
        {
            try
            {
                var nguoiDung = _unitOfWork.NguoiDungRepository.GetById(maND);
                if (nguoiDung == null)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng"
                    };
                }

                // Ki·ªÉm tra c√≥ ph·∫£i admin cu·ªëi c√πng kh√¥ng
                if (nguoiDung.VaiTro == "Admin" && DemSoAdmin() <= 1)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Kh√¥ng th·ªÉ x√≥a admin cu·ªëi c√πng"
                    };
                }

                // L∆∞u d·ªØ li·ªáu c≈© ƒë·ªÉ ghi l·ªãch s·ª≠
                var duLieuCu = SerializeNguoiDung(nguoiDung);

                // Soft delete - ch·ªâ ƒë·ªïi tr·∫°ng th√°i
                nguoiDung.TrangThai = false;
                nguoiDung.NgayCapNhat = DateTime.Now;

                _unitOfWork.NguoiDungRepository.Update(nguoiDung);
                _unitOfWork.SaveChanges();

                // Ghi l·ªãch s·ª≠ thay ƒë·ªïi
                try
                {
                    var duLieuMoi = SerializeNguoiDung(nguoiDung);
                    
                    _lichSuService.GhiLichSuThayDoi("NguoiDung", nguoiDung.MaND, "DELETE", 
                        duLieuCu, duLieuMoi, nguoiDung.MaND, GetCurrentIPAddress());
                }
                catch
                {
                    // B·ªè qua l·ªói ghi l·ªãch s·ª≠ ƒë·ªÉ kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn thao t√°c ch√≠nh
                }

                return new ServiceResult
                {
                    ThanhCong = true,
                    ThongBao = "X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng"
                };
            }
            catch (Exception ex)
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = $"L·ªói khi x√≥a ng∆∞·ªùi d√πng: {ex.Message}"
                };
            }
        }

        /// <summary>
        /// ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
        /// </summary>
        public ServiceResult DatLaiMatKhau(int maND, string matKhauMoi)
        {
            try
            {
                var nguoiDung = _unitOfWork.NguoiDungRepository.GetById(maND);
                if (nguoiDung == null)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng"
                    };
                }

                if (string.IsNullOrWhiteSpace(matKhauMoi) || matKhauMoi.Length < 6)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±"
                    };
                }

                nguoiDung.MatKhau = matKhauMoi;
                nguoiDung.SoLanDangNhapSai = 0;
                nguoiDung.KhoaTaiKhoan = false;
                nguoiDung.ThoiGianKhoa = null;
                nguoiDung.NgayCapNhat = DateTime.Now;

                _unitOfWork.NguoiDungRepository.Update(nguoiDung);
                _unitOfWork.SaveChanges();

                return new ServiceResult
                {
                    ThanhCong = true,
                    ThongBao = "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng"
                };
            }
            catch (Exception ex)
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = $"L·ªói khi ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u: {ex.Message}"
                };
            }
        }

        /// <summary>
        /// Kh√≥a/M·ªü kh√≥a t√†i kho·∫£n
        /// </summary>
        public ServiceResult KhoaMoKhoaTaiKhoan(int maND, bool khoa)
        {
            try
            {
                var nguoiDung = _unitOfWork.NguoiDungRepository.GetById(maND);
                if (nguoiDung == null)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng"
                    };
                }

                nguoiDung.KhoaTaiKhoan = khoa;
                nguoiDung.ThoiGianKhoa = khoa ? (DateTime?)DateTime.Now : null;
                nguoiDung.NgayCapNhat = DateTime.Now;

                _unitOfWork.NguoiDungRepository.Update(nguoiDung);
                _unitOfWork.SaveChanges();

                return new ServiceResult
                {
                    ThanhCong = true,
                    ThongBao = khoa ? "Kh√≥a t√†i kho·∫£n th√†nh c√¥ng" : "M·ªü kh√≥a t√†i kho·∫£n th√†nh c√¥ng"
                };
            }
            catch (Exception ex)
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = $"L·ªói khi kh√≥a/m·ªü kh√≥a t√†i kho·∫£n: {ex.Message}"
                };
            }
        }

        #region Private Methods

        private ServiceResult ValidateNguoiDung(NguoiDung nguoiDung, bool isUpdate = false)
        {
            if (string.IsNullOrWhiteSpace(nguoiDung.TenDangNhap))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "T√™n ƒëƒÉng nh·∫≠p kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"
                };
            }

            if (nguoiDung.TenDangNhap.Length < 3)
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "T√™n ƒëƒÉng nh·∫≠p ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±"
                };
            }

            // Ch·ªâ validate m·∫≠t kh·∫©u khi th√™m m·ªõi ho·∫∑c khi c·∫≠p nh·∫≠t c√≥ nh·∫≠p m·∫≠t kh·∫©u
            if (!isUpdate || !string.IsNullOrWhiteSpace(nguoiDung.MatKhau))
            {
                if (string.IsNullOrWhiteSpace(nguoiDung.MatKhau))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"
                    };
                }

                if (nguoiDung.MatKhau.Length < 6)
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±"
                    };
                }
            }

            if (string.IsNullOrWhiteSpace(nguoiDung.HoTen))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "H·ªç t√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"
                };
            }

            if (string.IsNullOrWhiteSpace(nguoiDung.VaiTro))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "Vai tr√≤ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng"
                };
            }

            if (!new[] { "Admin", "QuanLy", "NhanVien" }.Contains(nguoiDung.VaiTro))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "Vai tr√≤ kh√¥ng h·ª£p l·ªá"
                };
            }

            // Ch·ªâ validate email v√† s·ªë ƒëi·ªán tho·∫°i khi th√™m m·ªõi
            if (!isUpdate)
            {
                // Validate email format
                if (!string.IsNullOrEmpty(nguoiDung.Email) && !IsValidEmail(nguoiDung.Email))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng. V√≠ d·ª•: user@example.com"
                    };
                }

                // Validate phone number format
                if (!string.IsNullOrEmpty(nguoiDung.DienThoai) && !IsValidPhoneNumber(nguoiDung.DienThoai))
                {
                    return new ServiceResult
                    {
                        ThanhCong = false,
                        ThongBao = "S·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng. V√≠ d·ª•: 0123456789 ho·∫∑c +84123456789"
                    };
                }
            }

            return new ServiceResult { ThanhCong = true };
        }

        private bool KiemTraTenDangNhapTonTai(string tenDangNhap, int? maND = null)
        {
            var query = _unitOfWork.NguoiDungRepository.GetAll()
                .Where(nd => nd.TenDangNhap == tenDangNhap);

            if (maND.HasValue)
            {
                query = query.Where(nd => nd.MaND != maND.Value);
            }

            return query.Any();
        }

        private bool KiemTraEmailTonTai(string email, int? maND = null)
        {
            var query = _unitOfWork.NguoiDungRepository.GetAll()
                .Where(nd => nd.Email == email);

            if (maND.HasValue)
            {
                query = query.Where(nd => nd.MaND != maND.Value);
            }

            return query.Any();
        }

        private int DemSoAdmin()
        {
            return _unitOfWork.NguoiDungRepository.GetAll()
                .Count(nd => nd.VaiTro == "Admin" && nd.TrangThai);
        }

        private bool IsValidEmail(string email)
        {
            try
            {
                var addr = new System.Net.Mail.MailAddress(email);
                return addr.Address == email;
            }
            catch
            {
                return false;
            }
        }

        private bool IsValidPhoneNumber(string phoneNumber)
        {
            if (string.IsNullOrWhiteSpace(phoneNumber))
                return true; // Cho ph√©p ƒë·ªÉ tr·ªëng

            // Lo·∫°i b·ªè kho·∫£ng tr·∫Øng v√† k√Ω t·ª± ƒë·∫∑c bi·ªát
            var cleanPhone = phoneNumber.Replace(" ", "").Replace("-", "").Replace("(", "").Replace(")", "");

            // Ki·ªÉm tra ƒë·ªãnh d·∫°ng s·ªë ƒëi·ªán tho·∫°i Vi·ªát Nam
            // B·∫Øt ƒë·∫ßu b·∫±ng 0 ho·∫∑c +84, theo sau l√† 9-10 ch·ªØ s·ªë
            if (cleanPhone.StartsWith("+84"))
            {
                cleanPhone = "0" + cleanPhone.Substring(3);
            }

            // Ki·ªÉm tra theo database constraint: ch·ªâ ch·ª©a s·ªë, ƒë·ªô d√†i t·ªëi thi·ªÉu 10
            if (cleanPhone.Length >= 10 && cleanPhone.All(char.IsDigit))
            {
                return true;
            }

            return false;
        }

        #endregion

        #region Debug Helper Methods

        /// <summary>
        /// X·ª≠ l√Ω l·ªói CHECK constraint c·ª• th·ªÉ - Th·ªëng nh·∫•t cho c·∫£ th√™m m·ªõi v√† c·∫≠p nh·∫≠t
        /// H·ªó tr·ª£ t·∫•t c·∫£ constraint names (c√≥ t√™n v√† t·ª± ƒë·ªông t·∫°o)
        /// </summary>
        private ServiceResult HandleCheckConstraintError(string errorMessage)
        {
            // Ki·ªÉm tra l·ªói Email constraint - h·ªó tr·ª£ t·∫•t c·∫£ t√™n constraint c√≥ th·ªÉ c√≥
            if (errorMessage.Contains("CK__NguoiDung__Email") || 
                errorMessage.Contains("CK__NhaCungCap__Email") ||
                errorMessage.Contains("Email") || errorMessage.Contains("email"))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "‚ùå Email kh√¥ng h·ª£p l·ªá!\n\n" +
                              "üìã Y√™u c·∫ßu:\n" +
                              "‚Ä¢ Ph·∫£i c√≥ ƒë·ªãnh d·∫°ng: user@domain.com\n" +
                              "‚Ä¢ ƒê·ªô d√†i t·ªëi thi·ªÉu: 5 k√Ω t·ª±\n" +
                              "‚Ä¢ V√≠ d·ª•: admin@company.com\n\n" +
                              "üí° Vui l√≤ng ki·ªÉm tra v√† nh·∫≠p l·∫°i email ƒë√∫ng ƒë·ªãnh d·∫°ng."
                };
            }
            
            // Ki·ªÉm tra l·ªói DienThoai constraint - h·ªó tr·ª£ t·∫•t c·∫£ t√™n constraint c√≥ th·ªÉ c√≥
            if (errorMessage.Contains("CK__NguoiDung__DienThoai") ||
                errorMessage.Contains("CK__NhaCungCap__DienThoai") ||
                errorMessage.Contains("DienThoai") || errorMessage.Contains("dienThoai") || 
                errorMessage.Contains("phone") || errorMessage.Contains("Phone"))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "‚ùå S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá!\n\n" +
                              "üìã Y√™u c·∫ßu:\n" +
                              "‚Ä¢ Ch·ªâ ch·ª©a s·ªë (0-9)\n" +
                              "‚Ä¢ ƒê·ªô d√†i t·ªëi thi·ªÉu: 10 k√Ω t·ª±\n" +
                              "‚Ä¢ V√≠ d·ª•: 0123456789, 0987654321\n\n" +
                              "üí° Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ch·ªâ ch·ª©a s·ªë v√† c√≥ √≠t nh·∫•t 10 ch·ªØ s·ªë."
                };
            }
            
            // Ki·ªÉm tra l·ªói TenDangNhap constraint - ch·ªâ c√≥ ·ªü NguoiDung
            if (errorMessage.Contains("CK_TenDangNhap") ||
                errorMessage.Contains("CK__NguoiDung__TenDangNhap") ||
                errorMessage.Contains("TenDangNhap") || errorMessage.Contains("tenDangNhap") || 
                errorMessage.Contains("username") || errorMessage.Contains("Username"))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "‚ùå T√™n ƒëƒÉng nh·∫≠p kh√¥ng h·ª£p l·ªá!\n\n" +
                              "üìã Y√™u c·∫ßu:\n" +
                              "‚Ä¢ ƒê·ªô d√†i t·ªëi thi·ªÉu: 3 k√Ω t·ª±\n" +
                              "‚Ä¢ Ch·ªâ ch·ª©a: ch·ªØ c√°i, s·ªë, d·∫•u g·∫°ch d∆∞·ªõi\n" +
                              "‚Ä¢ V√≠ d·ª•: admin, user123, nhan_vien\n\n" +
                              "üí° Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p ch·ªâ ch·ª©a ch·ªØ c√°i, s·ªë v√† d·∫•u g·∫°ch d∆∞·ªõi."
                };
            }
            
            // Ki·ªÉm tra l·ªói MatKhau constraint - ch·ªâ c√≥ ·ªü NguoiDung
            if (errorMessage.Contains("CK_MatKhau") ||
                errorMessage.Contains("CK__NguoiDung__MatKhau") ||
                errorMessage.Contains("MatKhau") || errorMessage.Contains("matKhau") || 
                errorMessage.Contains("password") || errorMessage.Contains("Password"))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "‚ùå M·∫≠t kh·∫©u kh√¥ng h·ª£p l·ªá!\n\n" +
                              "üìã Y√™u c·∫ßu:\n" +
                              "‚Ä¢ ƒê·ªô d√†i t·ªëi thi·ªÉu: 6 k√Ω t·ª±\n" +
                              "‚Ä¢ V√≠ d·ª•: password123, mypass456\n\n" +
                              "üí° Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u c√≥ √≠t nh·∫•t 6 k√Ω t·ª±."
                };
            }
            
            // Ki·ªÉm tra l·ªói VaiTro constraint
            if (errorMessage.Contains("CK__NguoiDung__VaiTro") ||
                errorMessage.Contains("VaiTro") || errorMessage.Contains("vaiTro") ||
                errorMessage.Contains("role") || errorMessage.Contains("Role"))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "‚ùå Vai tr√≤ kh√¥ng h·ª£p l·ªá!\n\n" +
                              "üìã Y√™u c·∫ßu:\n" +
                              "‚Ä¢ Ch·ªâ ƒë∆∞·ª£c ch·ªçn: Admin, QuanLy, NhanVien\n" +
                              "‚Ä¢ V√≠ d·ª•: Admin, QuanLy, NhanVien\n\n" +
                              "üí° Vui l√≤ng ch·ªçn vai tr√≤ t·ª´ danh s√°ch c√≥ s·∫µn."
                };
            }
            
            // Ki·ªÉm tra l·ªói SoLanDangNhapSai constraint
            if (errorMessage.Contains("CK_SoLanDangNhapSai") ||
                errorMessage.Contains("CK__NguoiDung__SoLanDangNhapSai") ||
                errorMessage.Contains("SoLanDangNhapSai") || errorMessage.Contains("soLanDangNhapSai"))
            {
                return new ServiceResult
                {
                    ThanhCong = false,
                    ThongBao = "‚ùå S·ªë l·∫ßn ƒëƒÉng nh·∫≠p sai kh√¥ng h·ª£p l·ªá!\n\n" +
                              "üìã Y√™u c·∫ßu:\n" +
                              "‚Ä¢ Ph·∫£i t·ª´ 0 ƒë·∫øn 5 l·∫ßn\n" +
                              "‚Ä¢ H·ªá th·ªëng t·ª± ƒë·ªông qu·∫£n l√Ω\n\n" +
                              "üí° Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£."
                };
            }
            
            // L·ªói CHECK constraint kh√°c
            return new ServiceResult
            {
                ThanhCong = false,
                ThongBao = "‚ùå D·ªØ li·ªáu kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng y√™u c·∫ßu!\n\n" +
                          "üí° Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin nh·∫≠p v√†o v√† ƒë·∫£m b·∫£o tu√¢n th·ªß c√°c quy t·∫Øc ƒë·ªãnh d·∫°ng."
            };
        }

        /// <summary>
        /// L·∫•y th√¥ng tin chi ti·∫øt c·ªßa exception ƒë·ªÉ debug
        /// </summary>
        private string GetFullExceptionDetails(Exception ex)
        {
            var details = new System.Text.StringBuilder();
            
            details.AppendLine($"Exception Type: {ex.GetType().Name}");
            details.AppendLine($"Message: {ex.Message}");
            details.AppendLine($"Source: {ex.Source}");
            
            // Th√™m th√¥ng tin v·ªÅ Entity Framework n·∫øu c√≥
            if (ex.Message.Contains("Entity Framework") || ex.Message.Contains("DbContext"))
            {
                details.AppendLine("\n--- Entity Framework Debug Info ---");
                try
                {
                    var context = _unitOfWork.Context;
                    details.AppendLine($"Context State: {context.Database.Connection.State}");
                    details.AppendLine($"Change Tracker Count: {context.ChangeTracker.Entries().Count()}");
                    
                    foreach (var entry in context.ChangeTracker.Entries())
                    {
                        details.AppendLine($"Entity: {entry.Entity.GetType().Name}, State: {entry.State}");
                    }
                }
                catch (Exception debugEx)
                {
                    details.AppendLine($"Debug info error: {debugEx.Message}");
                }
            }
            
            details.AppendLine($"\nStack Trace: {ex.StackTrace}");
            
            if (ex.InnerException != null)
            {
                details.AppendLine("\n--- Inner Exception ---");
                details.AppendLine($"Type: {ex.InnerException.GetType().Name}");
                details.AppendLine($"Message: {ex.InnerException.Message}");
                details.AppendLine($"Source: {ex.InnerException.Source}");
                details.AppendLine($"Stack Trace: {ex.InnerException.StackTrace}");
                
                // Ki·ªÉm tra th√™m inner exception c·ªßa inner exception
                if (ex.InnerException.InnerException != null)
                {
                    details.AppendLine("\n--- Inner Exception Level 2 ---");
                    details.AppendLine($"Type: {ex.InnerException.InnerException.GetType().Name}");
                    details.AppendLine($"Message: {ex.InnerException.InnerException.Message}");
                }
            }
            
            return details.ToString();
        }

        #endregion

        /// <summary>
        /// Reset UnitOfWork khi c√≥ l·ªói connection
        /// </summary>
        public void ResetUnitOfWork()
        {
            try
            {
                _unitOfWork?.Dispose();
            }
            catch
            {
                // Ignore disposal errors
            }
            finally
            {
                _unitOfWork = new UnitOfWork();
            }
        }

        /// <summary>
        /// Serialize th√¥ng tin ng∆∞·ªùi d√πng th√†nh JSON string
        /// </summary>
        private string SerializeNguoiDung(NguoiDung nguoiDung)
        {
            var sb = new StringBuilder();
            sb.Append("{");
            sb.Append($"\"TenDangNhap\":\"{nguoiDung.TenDangNhap}\",");
            sb.Append($"\"HoTen\":\"{nguoiDung.HoTen}\",");
            sb.Append($"\"Email\":\"{nguoiDung.Email ?? ""}\",");
            sb.Append($"\"DienThoai\":\"{nguoiDung.DienThoai ?? ""}\",");
            sb.Append($"\"VaiTro\":\"{nguoiDung.VaiTro}\",");
            sb.Append($"\"TrangThai\":{nguoiDung.TrangThai.ToString().ToLower()}");
            sb.Append("}");
            return sb.ToString();
        }

        /// <summary>
        /// L·∫•y ƒë·ªãa ch·ªâ IP hi·ªán t·∫°i
        /// </summary>
        private string GetCurrentIPAddress()
        {
            try
            {
                var host = System.Net.Dns.GetHostEntry(System.Net.Dns.GetHostName());
                foreach (var ip in host.AddressList)
                {
                    if (ip.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork)
                    {
                        return ip.ToString();
                    }
                }
                return "127.0.0.1"; // Localhost fallback
            }
            catch
            {
                return "127.0.0.1"; // Localhost fallback
            }
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposing)
        {
            if (!_disposed)
            {
                if (disposing)
                {
                    _unitOfWork?.Dispose();
                    _lichSuService?.Dispose();
                }
                _disposed = true;
            }
        }
    }

    /// <summary>
    /// K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ service
    /// </summary>
    public class ServiceResult
    {
        public bool ThanhCong { get; set; }
        public string ThongBao { get; set; }
        public object DuLieu { get; set; }
    }
}
